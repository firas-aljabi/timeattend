openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/create_hr:
    post:
      summary: ''
      operationId: postApiCreate_hr
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: omnis
                email:
                  type: string
                  description: 'Must be a valid email address. Must match the regex /^[a-zA-Z0-9._%+-]{1,16}[^*]{0,}@[^*]+$/. Must not be greater than 255 characters.'
                  example: howell.emile@example.com
                password:
                  type: string
                  description: 'Must match the regex /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,24}$/. Must be at least 8 characters. Must not be greater than 24 characters.'
                  example: 'ma`]cP>ZpWuaFk7uVg5G'
                work_email:
                  type: string
                  description: 'Must be a valid email address. Must match the regex /^[a-zA-Z0-9._%+-]{1,16}[^*]{0,}@[^*]+$/. Must not be greater than 255 characters.'
                  example: ibogisich@example.org
                mobile:
                  type: string
                  description: ''
                  example: null
                phone:
                  type: string
                  description: ''
                  example: null
                nationalitie_id:
                  type: string
                  description: ''
                  example: voluptate
                birthday_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                material_status:
                  type: string
                  description: ''
                  example: '3'
                  enum:
                    - '1'
                    - '2'
                    - '3'
                departement:
                  type: string
                  description: ''
                  example: quia
                position:
                  type: string
                  description: ''
                  example: perspiciatis
                address:
                  type: string
                  description: ''
                  example: quaerat
                guarantor:
                  type: string
                  description: ''
                  example: sequi
                branch:
                  type: string
                  description: ''
                  example: deleniti
                skills:
                  type: string
                  description: ''
                  example: iusto
                serial_number:
                  type: string
                  description: ''
                  example: nulla
                gender:
                  type: string
                  description: ''
                  example: '2'
                  enum:
                    - '1'
                    - '2'
                status:
                  type: string
                  description: ''
                  example: '1'
                  enum:
                    - '1'
                    - '2'
                start_job_contract:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_job_contract:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_visa:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_employee_sponsorship:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_municipal_card:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_health_insurance:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_employee_residence:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                permission_to_leave:
                  type: string
                  description: ''
                  example: '0'
                  enum:
                    - '1'
                    - '0'
                leave_time:
                  type: string
                  description: 'This field is required when <code>permission_to_leave</code> is <code>1</code>.'
                  example: null
                permission_to_entry:
                  type: string
                  description: ''
                  example: '1'
                  enum:
                    - '1'
                    - '0'
                entry_time:
                  type: string
                  description: 'This field is required when <code>permission_to_entry</code> is <code>1</code>.'
                  example: null
                end_passport:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                id_photo:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                biography:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: bysukbfccevztgrbtdkluvvh
                visa:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                municipal_card:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                employee_residence:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                health_insurance:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                passport:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                employee_sponsorship:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                basic_salary:
                  type: string
                  description: ''
                  example: dolores
                number_of_shifts:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 53
                shifts:
                  type: array
                  description: 'This field is required when <code>number_of_shifts</code> is <code>!=</code> or <code>null</code>.'
                  example:
                    - aut
                  items:
                    type: string
              required:
                - name
                - email
                - password
                - nationalitie_id
                - birthday_date
                - serial_number
                - start_job_contract
                - end_job_contract
                - basic_salary
      security: []
  /api/create_admin:
    post:
      summary: ''
      operationId: postApiCreate_admin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: magni
                email:
                  type: string
                  description: 'Must be a valid email address. Must match the regex /^[a-zA-Z0-9._%+-]{1,16}@(?!.*\*)/.'
                  example: 'EV0%ZYMvb1Vs@!c[f^$*'
                password:
                  type: string
                  description: 'Must match the regex /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,24}$/. Must be at least 8 characters. Must not be greater than 24 characters.'
                  example: "p*(mcO'nt+oM+"
                work_email:
                  type: string
                  description: 'Must be a valid email address. Must match the regex /^[a-zA-Z0-9._%+-]{1,16}@(?!.*\*)/.'
                  example: '3nulTnIsf@!0*)'
                mobile:
                  type: string
                  description: ''
                  example: null
                phone:
                  type: string
                  description: ''
                  example: null
                company_id:
                  type: string
                  description: ''
                  example: est
                date_employee:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                nationalitie_id:
                  type: string
                  description: ''
                  example: et
                birthday_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                material_status:
                  type: string
                  description: ''
                  example: '2'
                  enum:
                    - '1'
                    - '2'
                    - '3'
                address:
                  type: string
                  description: ''
                  example: voluptates
                serial_number:
                  type: string
                  description: ''
                  example: unde
                gender:
                  type: string
                  description: ''
                  example: '1'
                  enum:
                    - '1'
                    - '2'
                branch:
                  type: string
                  description: ''
                  example: null
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - name
                - email
                - password
                - work_email
                - company_id
                - date_employee
                - nationalitie_id
                - birthday_date
                - serial_number
      security: []
  '/api/employee/{id}':
    delete:
      summary: ''
      operationId: deleteApiEmployeeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the employee.'
        example: temporibus
        required: true
        schema:
          type: string
  /api/update_employee:
    post:
      summary: ''
      operationId: postApiUpdate_employee
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must match the regex /^[a-zA-Z0-9._%+-]{1,16}[^*]{0,}@[^*]+$/. Must not be greater than 255 characters.'
                  example: herminia53@example.com
                mobile:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: tenetur
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
      security: []
  /api/determine_working_hours:
    post:
      summary: ''
      operationId: postApiDetermine_working_hours
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: ipsa
                hours_daily:
                  type: string
                  description: ''
                  example: null
                days_annual:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
      security: []
  /api/update_working_hours:
    post:
      summary: ''
      operationId: postApiUpdate_working_hours
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: molestias
                hours_daily:
                  type: string
                  description: ''
                  example: null
                days_annual:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
      security: []
  /api/reward_adversaries_allowance_salary:
    post:
      summary: ''
      operationId: postApiReward_adversaries_allowance_salary
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: ut
                rewards_type:
                  type: string
                  description: ''
                  example: '2'
                  enum:
                    - '1'
                    - '2'
                adversaries_type:
                  type: string
                  description: ''
                  example: '2'
                  enum:
                    - '1'
                    - '2'
                rewards:
                  type: string
                  description: 'This field is required when <code>rewards_type</code> is present.'
                  example: null
                adversaries:
                  type: string
                  description: 'This field is required when <code>adversaries_type</code> is present.'
                  example: null
                housing_allowance:
                  type: string
                  description: ''
                  example: null
                transportation_allowance:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
      security: []
  /api/get_dashboard_data:
    get:
      summary: ''
      operationId: getApiGet_dashboard_data
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  /api/get_employees_list:
    get:
      summary: ''
      operationId: getApiGet_employees_list
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  /api/employees_salaries:
    get:
      summary: ''
      operationId: getApiEmployees_salaries
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  /api/update_salary:
    post:
      summary: ''
      operationId: postApiUpdate_salary
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: sapiente
                new_salary:
                  type: string
                  description: ''
                  example: est
              required:
                - user_id
                - new_salary
      security: []
  /api/update_employment_contract:
    post:
      summary: ''
      operationId: postApiUpdate_employment_contract
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: velit
                number_of_month:
                  type: string
                  description: ''
                  example: null
                new_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-08-26'
              required:
                - user_id
      security: []
  /api/employees_attendances:
    get:
      summary: ''
      operationId: getApiEmployees_attendances
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  /api/get_contract_expiration:
    get:
      summary: ''
      operationId: getApiGet_contract_expiration
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  '/api/get_employee/{id}':
    get:
      summary: ''
      operationId: getApiGet_employeeId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the get employee.'
        example: et
        required: true
        schema:
          type: string
  /api/profile:
    get:
      summary: ''
      operationId: getApiProfile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  /api/check_in_attendance:
    post:
      summary: ''
      operationId: postApiCheck_in_attendance
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                check_in:
                  type: string
                  description: ''
                  example: id
              required:
                - check_in
      security: []
  /api/check_out_attendance:
    post:
      summary: ''
      operationId: postApiCheck_out_attendance
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                check_out:
                  type: string
                  description: ''
                  example: sunt
              required:
                - check_out
      security: []
  /api/termination_employees_contract:
    post:
      summary: ''
      operationId: postApiTermination_employees_contract
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Admin Operations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: id
                contract_termination_period:
                  type: string
                  description: ''
                  example: '3'
                  enum:
                    - '3'
                    - '6'
                    - '12'
                    - '0'
                contract_termination_reason:
                  type: string
                  description: ''
                  example: aut
              required:
                - user_id
                - contract_termination_period
                - contract_termination_reason
      security: []
  /api/list_of_nationalities:
    get:
      summary: ''
      operationId: getApiList_of_nationalities
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Admin Operations'
      security: []
  /api/add_alert:
    post:
      summary: ''
      operationId: postApiAdd_alert
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Alerts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: rokqmimed
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: paucek.alan@example.com
                type:
                  type: string
                  description: ''
                  example: '3'
                  enum:
                    - '1'
                    - '2'
                    - '3'
              required:
                - content
                - email
                - type
      security: []
  /api/get_my_alert:
    get:
      summary: ''
      operationId: getApiGet_my_alert
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Alerts
      security: []
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'This endpoint is used to login a user to the system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjkzMDM2MzM5LCJleHAiOjE2OTMwMzk5MzksIm5iZiI6MTY5MzAzNjMzOSwianRpIjoic0JtVWZMcVdiTjNBeVVQUCIsInN1YiI6IjIiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.LxUrVJ_gdDor8mju1o5Db43RM1c0yLlEYDpVV0RwdH8
                  user:
                    id: 2
                    name: 'Firas Jabi'
                    email: firassaljabi1232@gmail.com
                    work_email: firassaljabi1237@goma.com
                    email_verified_at: null
                    mobile: '0969040342'
                    phone: '0935463111'
                    serial_number: '00011'
                    nationalitie_id: 2
                    company_id: 1
                    birthday_date: '1998-11-26'
                    material_status: 2
                    gender: 1
                    address: Damascus
                    guarantor: null
                    branch: 'syria branch'
                    departement: null
                    position: null
                    type: 2
                    status: 1
                    skills: null
                    start_job_contract: null
                    end_job_contract: null
                    image: null
                    id_photo: null
                    biography: null
                    employee_sponsorship: null
                    end_employee_sponsorship: null
                    employee_residence: null
                    end_employee_residence: null
                    visa: null
                    end_visa: null
                    passport: null
                    end_passport: null
                    municipal_card: null
                    end_municipal_card: null
                    health_insurance: null
                    end_health_insurance: null
                    basic_salary: '0.00'
                    permission_to_entry: 0
                    entry_time: null
                    permission_to_leave: 0
                    leave_time: null
                    code: null
                    expired_at: null
                    created_at: '2023-08-26T07:01:20.000000Z'
                    updated_at: '2023-08-26T07:01:20.000000Z'
                    deleted_at: null
                properties:
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2xvZ2luIiwiaWF0IjoxNjkzMDM2MzM5LCJleHAiOjE2OTMwMzk5MzksIm5iZiI6MTY5MzAzNjMzOSwianRpIjoic0JtVWZMcVdiTjNBeVVQUCIsInN1YiI6IjIiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.LxUrVJ_gdDor8mju1o5Db43RM1c0yLlEYDpVV0RwdH8
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Firas Jabi'
                      email:
                        type: string
                        example: firassaljabi1232@gmail.com
                      work_email:
                        type: string
                        example: firassaljabi1237@goma.com
                      email_verified_at:
                        type: string
                        example: null
                      mobile:
                        type: string
                        example: '0969040342'
                      phone:
                        type: string
                        example: '0935463111'
                      serial_number:
                        type: string
                        example: '00011'
                      nationalitie_id:
                        type: integer
                        example: 2
                      company_id:
                        type: integer
                        example: 1
                      birthday_date:
                        type: string
                        example: '1998-11-26'
                      material_status:
                        type: integer
                        example: 2
                      gender:
                        type: integer
                        example: 1
                      address:
                        type: string
                        example: Damascus
                      guarantor:
                        type: string
                        example: null
                      branch:
                        type: string
                        example: 'syria branch'
                      departement:
                        type: string
                        example: null
                      position:
                        type: string
                        example: null
                      type:
                        type: integer
                        example: 2
                      status:
                        type: integer
                        example: 1
                      skills:
                        type: string
                        example: null
                      start_job_contract:
                        type: string
                        example: null
                      end_job_contract:
                        type: string
                        example: null
                      image:
                        type: string
                        example: null
                      id_photo:
                        type: string
                        example: null
                      biography:
                        type: string
                        example: null
                      employee_sponsorship:
                        type: string
                        example: null
                      end_employee_sponsorship:
                        type: string
                        example: null
                      employee_residence:
                        type: string
                        example: null
                      end_employee_residence:
                        type: string
                        example: null
                      visa:
                        type: string
                        example: null
                      end_visa:
                        type: string
                        example: null
                      passport:
                        type: string
                        example: null
                      end_passport:
                        type: string
                        example: null
                      municipal_card:
                        type: string
                        example: null
                      end_municipal_card:
                        type: string
                        example: null
                      health_insurance:
                        type: string
                        example: null
                      end_health_insurance:
                        type: string
                        example: null
                      basic_salary:
                        type: string
                        example: '0.00'
                      permission_to_entry:
                        type: integer
                        example: 0
                      entry_time:
                        type: string
                        example: null
                      permission_to_leave:
                        type: integer
                        example: 0
                      leave_time:
                        type: string
                        example: null
                      code:
                        type: string
                        example: null
                      expired_at:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-08-26T07:01:20.000000Z'
                      updated_at:
                        type: string
                        example: '2023-08-26T07:01:20.000000Z'
                      deleted_at:
                        type: string
                        example: null
        401:
          description: 'Failed Login'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid login credentials'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: mouaz@gmail.com
                password:
                  type: string
                  description: ''
                  example: '0123456789'
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'This endpoint is used to log out a user from the system.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User successfully signed out'
                properties:
                  message:
                    type: string
                    example: 'User successfully signed out'
      tags:
        - Authentication
  /api/verify_code:
    post:
      summary: ''
      operationId: postApiVerify_code
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      security: []
  /api/create_company:
    post:
      summary: ''
      operationId: postApiCreate_company
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dicta
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: brooks.zulauf@example.org
                start_commercial_record:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_commercial_record:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                commercial_record:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                longitude:
                  type: string
                  description: ''
                  example: similique
                latitude:
                  type: string
                  description: ''
                  example: et
                radius:
                  type: string
                  description: ''
                  example: qui
              required:
                - name
                - email
                - longitude
                - latitude
                - radius
      security: []
  '/api/company/{id}':
    get:
      summary: ''
      operationId: getApiCompanyId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Companies
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the company.'
        example: molestiae
        required: true
        schema:
          type: string
  /api/update_comapny:
    post:
      summary: ''
      operationId: postApiUpdate_comapny
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_id:
                  type: string
                  description: ''
                  example: natus
                name:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: carole.huels@example.org
                start_commercial_record:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_commercial_record:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                commercial_record:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - company_id
      security: []
  /api/show_percenatge_company:
    get:
      summary: ''
      operationId: getApiShow_percenatge_company
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Companies
      security: []
  /api/update_percentage:
    put:
      summary: ''
      operationId: putApiUpdate_percentage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Companies
      security: []
  /api/craete_deposit:
    post:
      summary: ''
      operationId: postApiCraete_deposit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Deposits
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: '3'
                  enum:
                    - '3'
                    - '2'
                    - '1'
                car_number:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>1</code>.'
                  example: null
                car_model:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>1</code>.'
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: nostrum
                manufacturing_year:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>1</code>.'
                  example: null
                Mechanic_card_number:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>1</code>.'
                  example: null
                car_image:
                  type: string
                  format: binary
                  description: 'This field is required when <code>type</code> is <code>1</code>.  Must be an image. Must not be greater than 2048 kilobytes.'
                laptop_type:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>2</code>.'
                  example: null
                serial_laptop_number:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>2</code>.'
                  example: null
                laptop_color:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>2</code>.'
                  example: null
                laptop_image:
                  type: string
                  format: binary
                  description: 'This field is required when <code>type</code> is <code>2</code>.  Must be an image. Must not be greater than 2048 kilobytes.'
                serial_mobile_number:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>3</code>.'
                  example: null
                mobile_color:
                  type: string
                  description: 'This field is required when <code>type</code> is <code>3</code>.'
                  example: null
                mobile_image:
                  type: string
                  format: binary
                  description: 'This field is required when <code>type</code> is <code>3</code>.  Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - type
                - user_id
      security: []
  '/api/approve_deposit/{id}':
    put:
      summary: ''
      operationId: putApiApprove_depositId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Deposits
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve deposit.'
        example: nam
        required: true
        schema:
          type: string
  /api/reject_deposit:
    post:
      summary: ''
      operationId: postApiReject_deposit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Deposits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deposit_id:
                  type: string
                  description: ''
                  example: voluptas
                reason_reject:
                  type: string
                  description: ''
                  example: cupiditate
              required:
                - deposit_id
                - reason_reject
      security: []
  /api/my_deposits:
    get:
      summary: ''
      operationId: getApiMy_deposits
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Deposits
      security: []
  /api/list_of_deposits:
    get:
      summary: ''
      operationId: getApiList_of_deposits
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Deposits
      security: []
  /api/list_of_clearance_deposits:
    get:
      summary: ''
      operationId: getApiList_of_clearance_deposits
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Deposits
      security: []
  '/api/clearance_request/{id}':
    put:
      summary: ''
      operationId: putApiClearance_requestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Deposits
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the clearance request.'
        example: natus
        required: true
        schema:
          type: string
  '/api/approve_clearance_request/{id}':
    put:
      summary: ''
      operationId: putApiApprove_clearance_requestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Deposits
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve clearance request.'
        example: magnam
        required: true
        schema:
          type: string
  /api/reject_clearance_request:
    post:
      summary: ''
      operationId: postApiReject_clearance_request
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Deposits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deposit_id:
                  type: string
                  description: ''
                  example: exercitationem
                reason_clearance_reject:
                  type: string
                  description: ''
                  example: beatae
              required:
                - deposit_id
                - reason_clearance_reject
      security: []
  /api/create_weekly_holiday:
    post:
      summary: ''
      operationId: postApiCreate_weekly_holiday
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Holidays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: string
                  description: ''
                  example: iste
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
              required:
                - day
                - date
      security: []
  /api/create_annual_holiday:
    post:
      summary: ''
      operationId: postApiCreate_annual_holiday
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Holidays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                holiday_name:
                  type: string
                  description: ''
                  example: veritatis
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
              required:
                - holiday_name
                - start_date
                - end_date
      security: []
  /api/update_weekly_holiday:
    post:
      summary: ''
      operationId: postApiUpdate_weekly_holiday
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Holidays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                holiday_id:
                  type: string
                  description: ''
                  example: sunt
                day:
                  type: string
                  description: ''
                  example: null
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
              required:
                - holiday_id
      security: []
  /api/update_annual_holiday:
    post:
      summary: ''
      operationId: postApiUpdate_annual_holiday
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Holidays
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                holiday_id:
                  type: string
                  description: ''
                  example: nihil
                holiday_name:
                  type: string
                  description: ''
                  example: et
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
              required:
                - holiday_id
      security: []
  /api/list_of_holidays:
    get:
      summary: ''
      operationId: getApiList_of_holidays
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Holidays
      security: []
  /api/get_hrs_list:
    get:
      summary: ''
      operationId: getApiGet_hrs_list
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Messages
      security: []
  '/api/private-messages/{user_id}':
    get:
      summary: ''
      operationId: getApiPrivateMessagesUser_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Messages
      security: []
    post:
      summary: ''
      operationId: postApiPrivateMessagesUser_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Messages
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/notification:
    get:
      summary: ''
      operationId: getApiNotification
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Notifications
      security: []
  /api/create_post:
    post:
      summary: ''
      operationId: postApiCreate_post
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: acbelevdowxqlryyjkf
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - content
      security: []
  /api/get_posts_list:
    get:
      summary: ''
      operationId: getApiGet_posts_list
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Posts
      security: []
  /api/get_my_posts:
    get:
      summary: ''
      operationId: getApiGet_my_posts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Posts
      security: []
  /api/add_comment:
    post:
      summary: ''
      operationId: postApiAdd_comment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: dlb
                post_id:
                  type: string
                  description: ''
                  example: tempora
              required:
                - content
                - post_id
      security: []
  /api/add_like:
    post:
      summary: ''
      operationId: postApiAdd_like
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - post_id
      security: []
  /api/add_like_comment:
    post:
      summary: ''
      operationId: postApiAdd_like_comment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: string
                  description: ''
                  example: aspernatur
              required:
                - comment_id
      security: []
  /api/share_post:
    post:
      summary: ''
      operationId: postApiShare_post
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: string
                  description: ''
                  example: aut
              required:
                - post_id
      security: []
  '/api/post/{id}':
    delete:
      summary: ''
      operationId: deleteApiPostId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/comment/{id}':
    delete:
      summary: ''
      operationId: deleteApiCommentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 7
        required: true
        schema:
          type: integer
  /api/add_vacation_request:
    post:
      summary: ''
      operationId: postApiAdd_vacation_request
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: ''
                  example: autem
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                vacation_type:
                  type: string
                  description: ''
                  example: '6'
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
                    - '6'
                    - '7'
                    - '8'
                    - '9'
                    - '10'
                    - '11'
                start_time:
                  type: string
                  description: ''
                  example: et
                end_time:
                  type: string
                  description: ''
                  example: unde
                payment_type:
                  type: string
                  description: ''
                  example: deleniti
              required:
                - reason
                - start_date
                - end_date
                - vacation_type
                - start_time
                - end_time
                - payment_type
      security: []
  /api/add_justify_request:
    post:
      summary: ''
      operationId: postApiAdd_justify_request
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: ''
                  example: nisi
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                start_date:
                  type: string
                  description: 'This field is required when <code>date</code> is <code>null</code>.  Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                end_date:
                  type: string
                  description: 'This field is required when <code>date</code> is <code>null</code>.  Must be a valid date.'
                  example: '2023-08-26T16:59:43'
                justify_type:
                  type: string
                  description: ''
                  example: '2'
                  enum:
                    - '1'
                    - '2'
                    - '3'
                attachments:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: myxebdffqxxmvhgxlx
              required:
                - reason
                - justify_type
      security: []
  /api/add_retirement_request:
    post:
      summary: ''
      operationId: postApiAdd_retirement_request
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Requests
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: ''
                  example: iusto
                attachments:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - reason
      security: []
  /api/add_resignation_request:
    post:
      summary: ''
      operationId: postApiAdd_resignation_request
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Requests
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: ''
                  example: magni
                attachments:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
              required:
                - reason
      security: []
  '/api/request/{id}':
    get:
      summary: ''
      operationId: getApiRequestId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: facilis
        required: true
        schema:
          type: string
  '/api/approve_request/{id}':
    put:
      summary: ''
      operationId: putApiApprove_requestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Requests
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve request.'
        example: repudiandae
        required: true
        schema:
          type: string
  /api/reject_request:
    post:
      summary: ''
      operationId: postApiReject_request
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_id:
                  type: string
                  description: ''
                  example: cupiditate
                reject_reason:
                  type: string
                  description: ''
                  example: dolor
              required:
                - request_id
                - reject_reason
      security: []
  /api/my_requests:
    get:
      summary: ''
      operationId: getApiMy_requests
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
  /api/vacation_requests:
    get:
      summary: ''
      operationId: getApiVacation_requests
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
  /api/justify_requests:
    get:
      summary: ''
      operationId: getApiJustify_requests
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
  /api/retirement_requests:
    get:
      summary: ''
      operationId: getApiRetirement_requests
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
  /api/resignation_requests:
    get:
      summary: ''
      operationId: getApiResignation_requests
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
  /api/my_monthly_shift:
    get:
      summary: ''
      operationId: getApiMy_monthly_shift
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Requests
      security: []
  /api/update_employee_shift:
    post:
      summary: ''
      operationId: postApiUpdate_employee_shift
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Shifts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shift_id:
                  type: string
                  description: ''
                  example: labore
                start_time:
                  type: string
                  description: ''
                  example: null
                end_time:
                  type: string
                  description: ''
                  example: null
                start_break_hour:
                  type: string
                  description: ''
                  example: null
                end_break_hour:
                  type: string
                  description: ''
                  example: null
              required:
                - shift_id
      security: []
tags:
  -
    name: 'Admin Operations'
    description: "\nAPIs for managing Admin Operations"
  -
    name: Alerts
    description: "\nAPIs for managing Alert Operations"
  -
    name: Authentication
    description: "\nAPIs for managing Authentication"
  -
    name: Companies
    description: "\nAPIs for managing Companies"
  -
    name: Deposits
    description: "\nAPIs for managing Deposits"
  -
    name: Holidays
    description: "\nAPIs for managing Holidays"
  -
    name: Messages
    description: "\nAPIs for managing Messages"
  -
    name: Notifications
    description: "\nAPIs for managing Notifications"
  -
    name: Posts
    description: "\nAPIs for managing Posts"
  -
    name: Requests
    description: "\nAPIs for managing Requests"
  -
    name: Shifts
    description: "\nAPIs for managing Shifts"

name: Requests
description: |-

  APIs for managing Requests
endpoints:
  -
    httpMethods:
      - POST
    uri: api/add_vacation_request
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-26T16:59:43'
        type: string
        enumValues: []
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-08-26T16:59:43'
        type: string
        enumValues: []
        custom: []
      vacation_type:
        name: vacation_type
        description: ''
        required: true
        example: '6'
        type: string
        enumValues:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
          - '11'
        custom: []
      start_time:
        name: start_time
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
      end_time:
        name: end_time
        description: ''
        required: true
        example: unde
        type: string
        enumValues: []
        custom: []
      payment_type:
        name: payment_type
        description: ''
        required: true
        example: deleniti
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      reason: autem
      start_date: '2023-08-26T16:59:43'
      end_date: '2023-08-26T16:59:43'
      vacation_type: '6'
      start_time: et
      end_time: unde
      payment_type: deleniti
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/add_justify_request
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: ''
        required: true
        example: nisi
        type: string
        enumValues: []
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2023-08-26T16:59:43'
        type: string
        enumValues: []
        custom: []
      start_date:
        name: start_date
        description: 'This field is required when <code>date</code> is <code>null</code>.  Must be a valid date.'
        required: false
        example: '2023-08-26T16:59:43'
        type: string
        enumValues: []
        custom: []
      end_date:
        name: end_date
        description: 'This field is required when <code>date</code> is <code>null</code>.  Must be a valid date.'
        required: false
        example: '2023-08-26T16:59:43'
        type: string
        enumValues: []
        custom: []
      justify_type:
        name: justify_type
        description: ''
        required: true
        example: '2'
        type: string
        enumValues:
          - '1'
          - '2'
          - '3'
        custom: []
      attachments:
        name: attachments
        description: 'Must not be greater than 2048 characters.'
        required: false
        example: myxebdffqxxmvhgxlx
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      reason: nisi
      date: '2023-08-26T16:59:43'
      start_date: '2023-08-26T16:59:43'
      end_date: '2023-08-26T16:59:43'
      justify_type: '2'
      attachments: myxebdffqxxmvhgxlx
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/add_retirement_request
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: ''
        required: true
        example: iusto
        type: string
        enumValues: []
        custom: []
      attachments:
        name: attachments
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      reason: iusto
    fileParameters:
      attachments: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/add_resignation_request
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: ''
        required: true
        example: magni
        type: string
        enumValues: []
        custom: []
      attachments:
        name: attachments
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      reason: magni
    fileParameters:
      attachments: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/request/{id}'
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the request.'
        required: true
        example: facilis
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: facilis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/approve_request/{id}'
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the approve request.'
        required: true
        example: repudiandae
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: repudiandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reject_request
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      request_id:
        name: request_id
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        custom: []
      reject_reason:
        name: reject_reason
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      request_id: cupiditate
      reject_reason: dolor
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my_requests
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vacation_requests
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/justify_requests
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/retirement_requests
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/resignation_requests
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/my_monthly_shift
    metadata:
      groupName: Requests
      groupDescription: |-

        APIs for managing Requests
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
